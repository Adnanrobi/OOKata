[
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/22",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/22/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/22/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/22/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/22",
      "id": 589752307,
      "node_id": "MDU6SXNzdWU1ODk3NTIzMDc=",
      "number": 22,
      "title": "OOP child's play: Day 1",
      "user": {
        "login": "ratul-mahjabin",
        "id": 60655884,
        "node_id": "MDQ6VXNlcjYwNjU1ODg0",
        "avatar_url": "https://avatars2.githubusercontent.com/u/60655884?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ratul-mahjabin",
        "html_url": "https://github.com/ratul-mahjabin",
        "followers_url": "https://api.github.com/users/ratul-mahjabin/followers",
        "following_url": "https://api.github.com/users/ratul-mahjabin/following{/other_user}",
        "gists_url": "https://api.github.com/users/ratul-mahjabin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ratul-mahjabin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ratul-mahjabin/subscriptions",
        "organizations_url": "https://api.github.com/users/ratul-mahjabin/orgs",
        "repos_url": "https://api.github.com/users/ratul-mahjabin/repos",
        "events_url": "https://api.github.com/users/ratul-mahjabin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ratul-mahjabin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430954,
          "node_id": "MDU6TGFiZWwxOTE0NDMwOTU0",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/SOLID",
          "name": "SOLID",
          "color": "0052cc",
          "default": false,
          "description": "Topic - SOLID Principles"
        },
        {
          "id": 1899337889,
          "node_id": "MDU6TGFiZWwxODk5MzM3ODg5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Very%20Easy",
          "name": "Very Easy",
          "color": "1e9600",
          "default": false,
          "description": "Difficulty Level - Very Easy"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-29T09:21:45Z",
      "updated_at": "2020-03-29T10:50:08Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "## Overview\r\nBoltu is a junior Software Engineer in a company. He got assigned to make a class of a project named \"Employee-Management-System\". so he wrote a class like this\r\n```java\r\npublic interface IEmployeeManager\r\n{\r\n    public Employee getEmployeeById(long id);\r\n\r\n    public void addEmployee(Employee employee);\r\n\r\n    public void sendEmail(Employee employee, String content);\r\n}\r\n\r\npublic class EmployeeManager implements IEmployeeManager\r\n{\r\n    @Override\r\n    public Employee getEmployeeById(long id) { ... }\r\n\r\n    @Override\r\n    public void addEmployee(Employee employee) { ... }\r\n\r\n    @Override\r\n    public void sendEmail(Employee employee, String content) { ... }\r\n}\r\n```\r\nWhen Boltu took this piece of code to his manager, he told \"this is like God Class\" and asked him to make some modifications to the code.\r\n\r\n## Assumptions\r\nsendEmail() method may have modifications over time for achieving efficiency.\r\n\r\n## Task\r\nDo the modifications to the code as Project Manager intended.\r\n\r\n## Notes\r\nThe methods of the class are not fully implemented. This is just an abstracted version. You also need not to implement them fully.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/22/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/21",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/21/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/21/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/21/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/21",
      "id": 589628173,
      "node_id": "MDU6SXNzdWU1ODk2MjgxNzM=",
      "number": 21,
      "title": "Strange!",
      "user": {
        "login": "ratul-mahjabin",
        "id": 60655884,
        "node_id": "MDQ6VXNlcjYwNjU1ODg0",
        "avatar_url": "https://avatars2.githubusercontent.com/u/60655884?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ratul-mahjabin",
        "html_url": "https://github.com/ratul-mahjabin",
        "followers_url": "https://api.github.com/users/ratul-mahjabin/followers",
        "following_url": "https://api.github.com/users/ratul-mahjabin/following{/other_user}",
        "gists_url": "https://api.github.com/users/ratul-mahjabin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ratul-mahjabin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ratul-mahjabin/subscriptions",
        "organizations_url": "https://api.github.com/users/ratul-mahjabin/orgs",
        "repos_url": "https://api.github.com/users/ratul-mahjabin/repos",
        "events_url": "https://api.github.com/users/ratul-mahjabin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ratul-mahjabin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1899343561,
          "node_id": "MDU6TGFiZWwxODk5MzQzNTYx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Easy",
          "name": "Easy",
          "color": "8fc400",
          "default": false,
          "description": "Difficulty Level - Easy"
        },
        {
          "id": 1914430954,
          "node_id": "MDU6TGFiZWwxOTE0NDMwOTU0",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/SOLID",
          "name": "SOLID",
          "color": "0052cc",
          "default": false,
          "description": "Topic - SOLID Principles"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-28T18:04:36Z",
      "updated_at": "2020-03-29T03:55:11Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n## Overview\r\nToday your OOP teacher taught you an interesting topic and gave you a code as an exercise.\r\n```java\r\npublic abstract class Transportation {\r\n    private double speed;\r\n\r\n    public double getSpeed() {\r\n        return speed;\r\n    }\r\n\r\n    abstract void startEngine();\r\n}\r\n\r\nclass Car extends Transportation {\r\n    @Override\r\n    void startEngine() {\r\n        System.out.println(\"Car Engine starts!\");\r\n    }\r\n}\r\n\r\nclass Cycle extends Transportation {\r\n    @Override\r\n    void startEngine() {\r\n        System.out.println(\"Cycle Engine starts!\");\r\n    }\r\n}\r\n```\r\n## Task\r\nFind the problem of the given code and rewrite it.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/21/reactions",
        "total_count": 3,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/20",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/20/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/20/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/20/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/20",
      "id": 589626543,
      "node_id": "MDU6SXNzdWU1ODk2MjY1NDM=",
      "number": 20,
      "title": "We Hate Independence",
      "user": {
        "login": "KhalidMasum",
        "id": 55809005,
        "node_id": "MDQ6VXNlcjU1ODA5MDA1",
        "avatar_url": "https://avatars1.githubusercontent.com/u/55809005?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KhalidMasum",
        "html_url": "https://github.com/KhalidMasum",
        "followers_url": "https://api.github.com/users/KhalidMasum/followers",
        "following_url": "https://api.github.com/users/KhalidMasum/following{/other_user}",
        "gists_url": "https://api.github.com/users/KhalidMasum/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KhalidMasum/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KhalidMasum/subscriptions",
        "organizations_url": "https://api.github.com/users/KhalidMasum/orgs",
        "repos_url": "https://api.github.com/users/KhalidMasum/repos",
        "events_url": "https://api.github.com/users/KhalidMasum/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KhalidMasum/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914436511,
          "node_id": "MDU6TGFiZWwxOTE0NDM2NTEx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Refactoring",
          "name": "Refactoring",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Refactoring"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-28T17:56:29Z",
      "updated_at": "2020-03-29T03:50:40Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n## Overview\r\n<!-- \r\nGive an overview of the problem.\r\nThis section is mandatory\r\n-->\r\nYour team has created a monster killing game. Where you have decided to put a menu named \"Settings\" from where a user can modify some game options. Everyone in your team agreed that there shall be only one .cfg file to store the settings, namely \"Settings.cfg\".  \r\nYou are very proud to introduce this new file. The current state of the code can be found [here](https://gist.github.com/KhalidMasum/b810b48e8aeb010e7e60fa64f4077e64). Your teammate Zahid tells you, _\"It's pretty cool! We can easily add many cool features in our game now\"_.\r\n\r\nYou are celebrating your victory but in few days you started to notice strange things. Making mistakes has become pretty common!  One day Karim comes and tells you, _\"It's not completely our fault you know. We shouldn't even be able to access cursor settings when working with Blood. There are many other similar cases\"_.\r\n\r\nIt certainly is a big problem. And you know that you have to fix it fast. So you have decided to change the code. So that your team members can 'define' what needs to be accessed when accessing the .cfg is necessary.\r\n\r\n## Example\r\nWhile working in `Cursor.java` someone may mistakenly change `BloodColor`.\r\n## Assumptions\r\n`Settings.loadSettings()` loads all the settings to the class from `Settings.cfg` file according to desired Type and `Settings.storeSettings()` store current state of settings in the `Settings.cfg` file\r\n\r\n## Task\r\n* Design the code in such a way that only a certain part of `Settings.cfg` can be read and written based on what you need to do. So that you don't make mistakes while developing the game. \r\n* (optional) Improving the current state of the code is appreciated\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/20/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/19",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/19/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/19/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/19/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/19",
      "id": 586981713,
      "node_id": "MDU6SXNzdWU1ODY5ODE3MTM=",
      "number": 19,
      "title": "Tony Stark",
      "user": {
        "login": "Abedeen25",
        "id": 44981422,
        "node_id": "MDQ6VXNlcjQ0OTgxNDIy",
        "avatar_url": "https://avatars1.githubusercontent.com/u/44981422?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Abedeen25",
        "html_url": "https://github.com/Abedeen25",
        "followers_url": "https://api.github.com/users/Abedeen25/followers",
        "following_url": "https://api.github.com/users/Abedeen25/following{/other_user}",
        "gists_url": "https://api.github.com/users/Abedeen25/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Abedeen25/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Abedeen25/subscriptions",
        "organizations_url": "https://api.github.com/users/Abedeen25/orgs",
        "repos_url": "https://api.github.com/users/Abedeen25/repos",
        "events_url": "https://api.github.com/users/Abedeen25/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Abedeen25/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1899343561,
          "node_id": "MDU6TGFiZWwxODk5MzQzNTYx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Easy",
          "name": "Easy",
          "color": "8fc400",
          "default": false,
          "description": "Difficulty Level - Easy"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-03-24T14:00:44Z",
      "updated_at": "2020-03-26T09:37:36Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n## Overview\r\nYou are new at the film industry and casting for the role of **\"Iron Man\"** for a Marvel movie at the request of the director. You have auditioned 300 people, after going through all of them **Robert Downey Jr.**  was the best guy you could find. So, you choose him for the role. After the first day's shoot, everyone went home. The next day, the director asked for the **Iron Man** again. So, instead of calling **Robert Downey Jr.** you sat down again and posted for an audition to find an actor and brought **Michael Fassbender**. Seeing your job the director became outrageous. After coming to his senses, he sat down with you and made a few points clear.\r\n- You can't have different persons playing the same role on different days of the shoot.\r\n- It's not economically and temporally viable to audition for the same character again and again\r\n\r\nSo, from now on you are to ensure 2 things\r\n1. Before the shooting starts, you need to find an actor for the role.\r\n2. After casting, whenever that role is to be played you call for the same actor.\r\n\r\n\r\n## Assumptions\r\nLet's assume the actor is immortal and as long as he lives he will happily play the role. So, no replacements will be needed.\r\n\r\n## Task\r\nImplement an `Actor` class and a `Cast` class. So that, whenever Cast calls for an Actor the above-stated rules are maintained.\r\n\r\n## Notes\r\nI know you are not that dumb to cast the same roles again and again. **It's all just an assumption :P** \r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/19/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/18",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/18/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/18/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/18/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/18",
      "id": 586704314,
      "node_id": "MDU6SXNzdWU1ODY3MDQzMTQ=",
      "number": 18,
      "title": "Parent or Child?",
      "user": {
        "login": "XLR8-07",
        "id": 43420293,
        "node_id": "MDQ6VXNlcjQzNDIwMjkz",
        "avatar_url": "https://avatars3.githubusercontent.com/u/43420293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/XLR8-07",
        "html_url": "https://github.com/XLR8-07",
        "followers_url": "https://api.github.com/users/XLR8-07/followers",
        "following_url": "https://api.github.com/users/XLR8-07/following{/other_user}",
        "gists_url": "https://api.github.com/users/XLR8-07/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/XLR8-07/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/XLR8-07/subscriptions",
        "organizations_url": "https://api.github.com/users/XLR8-07/orgs",
        "repos_url": "https://api.github.com/users/XLR8-07/repos",
        "events_url": "https://api.github.com/users/XLR8-07/events{/privacy}",
        "received_events_url": "https://api.github.com/users/XLR8-07/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1931540341,
          "node_id": "MDU6TGFiZWwxOTMxNTQwMzQx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Run%20in%20Head",
          "name": "Run in Head",
          "color": "e076bb",
          "default": false,
          "description": "Type of problems that people should try running in their head, not in IDE"
        },
        {
          "id": 1899337889,
          "node_id": "MDU6TGFiZWwxODk5MzM3ODg5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Very%20Easy",
          "name": "Very Easy",
          "color": "1e9600",
          "default": false,
          "description": "Difficulty Level - Very Easy"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-24T05:31:36Z",
      "updated_at": "2020-03-24T14:52:56Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "## Overview\r\nOri is learning a new language but she got confused about the terms _parent_ and _child_. She is trying to understand the output of codes without running them but is stuck with the code below. Can you help her understand this one? \r\n\r\n## Ori's Code\r\n\r\n```C#\r\n// Language: C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace QuizTask\r\n{\r\n    class Program\r\n    {\r\n        static void Show(Child obj)\r\n        {\r\n            obj.Print();\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            Child x = new Child();\r\n            Child y = new Parent(15);\r\n            Parent z = new Parent(10);\r\n\r\n            Show(z);\r\n            Show(y);\r\n            Show(x);\r\n        }\r\n    }\r\n\r\n     public class Child\r\n    {\r\n        public Child()\r\n        {\r\n            Console.WriteLine(\"Child\");\r\n        }\r\n        public Child(int i)\r\n        {\r\n            Console.WriteLine(\"Dhaka \"+ i);\r\n        }\r\n        public Child(string y, int k):this(k)\r\n        {\r\n            Console.WriteLine(\"Borisal \"+ k);\r\n        }\r\n        public virtual void Print()\r\n        {\r\n            Console.WriteLine(\"In Child Class\");\r\n        }\r\n    }\r\n\r\n    public class Parent:Child\r\n    {\r\n        public Parent(int i):this(\"CS\")\r\n        {\r\n            Console.WriteLine(\"Sylhet \" + i);\r\n        }\r\n\r\n        public Parent(int i, string y) : base(y,20)\r\n        {\r\n            Console.WriteLine(\"Sylhet \" + i);\r\n        }\r\n\r\n        public Parent(string y) :this(20,y)\r\n        {\r\n            Console.WriteLine(\"Bogra \" + y);\r\n        }\r\n\r\n        public override void Print()\r\n        {\r\n            Console.WriteLine(\"In Parent Class\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Task\r\n- Predict the output of the code above.\r\n- This is  _RUN IN HEAD_ problem. Please do not run the code in an IDE.\r\n- Write your solution in the comment.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/18/reactions",
        "total_count": 3,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/17",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/17/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/17/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/17/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/17",
      "id": 586684181,
      "node_id": "MDU6SXNzdWU1ODY2ODQxODE=",
      "number": 17,
      "title": "Arthur Weasley and the Magic of the Muggles",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1899344523,
          "node_id": "MDU6TGFiZWwxODk5MzQ0NTIz",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Medium",
          "name": "Medium",
          "color": "fff200",
          "default": false,
          "description": "Difficulty Level - Medium"
        },
        {
          "id": 1914436511,
          "node_id": "MDU6TGFiZWwxOTE0NDM2NTEx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Refactoring",
          "name": "Refactoring",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Refactoring"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-24T04:31:56Z",
      "updated_at": "2020-03-24T04:31:56Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n## Overview\r\nAfter all this time, the wizards have realized that muggles have some magical abilities in them. It is quite different than the wizards' magic, but still, it is magic. Arthur Weasley, a high official at the Ministry, has convinced the ministry of magic that integrating muggle magic in day to day wizarding activities will improve their efficiency.  \r\nA muggle magician was hired to implement muggle magic at Hogwarts, however, he is no longer feeling like working with wizards. Now they have hired you to complete the unfinished work. The wizards have a hard time understanding how writing the spells in a small box works, but you are master of it. As you may have guessed, muggle magic is known as software in the muggle world. \r\nYou found that the code is somewhat well-written, but there is one thing that is bothering you. There are **a lot of places** with code similar to the following\r\n```C#\r\n// Language: C#\r\nclass PetTime\r\n{\r\n    void TakeCareOfPet(Student student)\r\n    {\r\n        if (student.pet == null)\r\n            Relax();\r\n        else\r\n            student.pet.Feed();\r\n    }\r\n\r\n    void Relax()\r\n    {\r\n        // relax!\r\n    }\r\n}\r\n```\r\nTracking down farther, you find that the student class is something like this:\r\n```C#\r\n// Language: C#\r\nclass Student\r\n{\r\n    public readonly IPet pet;\r\n    public Student(IPet pet)\r\n    {\r\n        this.pet = pet;\r\n    }\r\n}\r\n```\r\nThat means the pet object cannot reset after an object of Student is initialized.\r\n\r\nTracking down even farther, you are happy to find that there is only one place from where a student object is created.\r\n```C#\r\n// Language: C#\r\nclass StudentRegistry\r\n{\r\n    public Student RegisterStudent(string petType)\r\n    {\r\n        var pet = GetPet(petType);\r\n        var student = new Student(pet);\r\n        return student;\r\n    }\r\n\r\n    private IPet GetPet(string petType)\r\n    {\r\n        if (petType == \"owl\")\r\n            return new Owl();\r\n        else if (petType == \"rat\")\r\n            return new Rat();\r\n        else\r\n            return null;\r\n    }\r\n}\r\n```\r\n\r\n## Assumptions\r\n- `Owl` and `Rat` are subtypes of `IPet`\r\n- `PetTime.TakeCareOfPet` is only an example of a conditional statement checking if pet is `null`. There are more places with a similar structure.\r\n\r\n## Task\r\n- Refactor the code so that the duplicate conditional statements like in `PetTime.TakeCareOfPet` are removed.\r\n- You can introduce additional classes/methods if required\r\n\r\n## Notes\r\nThere are other things in the code, but those are ignored because those are irrelevant to this problem.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/17/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/16",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/16/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/16/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/16/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/16",
      "id": 586527701,
      "node_id": "MDU6SXNzdWU1ODY1Mjc3MDE=",
      "number": 16,
      "title": "Santa's List",
      "user": {
        "login": "Ela-Zaman",
        "id": 53617549,
        "node_id": "MDQ6VXNlcjUzNjE3NTQ5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/53617549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ela-Zaman",
        "html_url": "https://github.com/Ela-Zaman",
        "followers_url": "https://api.github.com/users/Ela-Zaman/followers",
        "following_url": "https://api.github.com/users/Ela-Zaman/following{/other_user}",
        "gists_url": "https://api.github.com/users/Ela-Zaman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Ela-Zaman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Ela-Zaman/subscriptions",
        "organizations_url": "https://api.github.com/users/Ela-Zaman/orgs",
        "repos_url": "https://api.github.com/users/Ela-Zaman/repos",
        "events_url": "https://api.github.com/users/Ela-Zaman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Ela-Zaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899344523,
          "node_id": "MDU6TGFiZWwxODk5MzQ0NTIz",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Medium",
          "name": "Medium",
          "color": "fff200",
          "default": false,
          "description": "Difficulty Level - Medium"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-23T21:24:07Z",
      "updated_at": "2020-03-24T14:32:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n## Overview\r\nSanta has been using the same system to keep track of Wicked or Nice people for years now.  His system has become slow and needs to be updated.  He has asked you to demonstrate your ability to use OOP to construct a gift tracking system for him.  \r\n\r\n\r\n\r\n## Task\r\n\r\n1. Create a system to store details of people in on his list. Each `Person` should have the following details stored):\r\n`Name` ,\t`Location`,`Gift they would like`,`If they have been wicked or nice`\r\n1. Allow Santa to \r\n   -  `enter` a new person onto the list\r\n   - `Remove` a person from the list\r\n   - ` Update or change` the person's details on the list\r\n1.  The system should produce 2 lists, each list should be presented in a suitable way and display the total number of people on the list: \r\n    - one wicked\r\n    - one nice \r\n1.  Santa is on a budget this year, change your system so that any wicked people are automatically given a lump of coal as a gift.\r\n1.  As Santa delivers each gift, he would like the system to allow him to search for a person and record that the gift has been delivered.  \r\n1. Santa has had problems with the taxman this year, so he would like the system to record how much each gift was.  Adapt your system to store the cost of the gift, it would be nice if the system could assign the cost of the gift automatically - but Santa would be happy to enter the price himself.\r\n1. He would then like an analysis of how many of each gift has been given, the total amount he has spent on each of the gift types. \r\n\r\n\r\n## Example\r\n\r\nHere is an example in python of the class definition (CONSTRUCTOR) for the person\r\n\r\n```Python\r\n# Language: Python\r\nclass Person():\r\n    def __init__ (self,name,location,prsentidea,nice):\r\n        self.name = name\r\n        self.location = location\r\n        self.prsentidea = prsentidea\r\n        self.nice = nice\r\n\r\n        self.giftgiven = \"N\"\r\n        self.costofgift = 0\r\n\r\n```\r\nWithing the constructor you can also add code which will run automatically - this code could be added below the properties\r\n\r\n```Python\r\n# Language: Python\r\nif self.prsentidea.lower() == \"train\":\r\n            self.costofgift = 100\r\n        elif self.prsentidea.lower() == \"pc\":\r\n            self.costofgift = 50\r\n        else:\r\n            self.costofgift = 20\r\n\r\n```\r\nYou could also add some methods to update if the gift had been given or to update the price of the gifts\r\n\r\n```Python\r\n# Language: Python\r\ndef updategift(self):\r\n        self.giftgiven = \"Y\"\r\n\r\n    def updatepriceofgift(self):\r\n        if self.prsentidea.lower() == \"train\":\r\n            self.costofgift = 100\r\n        elif self.prsentidea.lower() == \"pc\":\r\n            self.costofgift = 50\r\n        else:\r\n            self.costofgift = 20\r\n```\r\n\r\nHere a sample of the code to create an object of type person\r\n```Python\r\n# Language: Python\r\ninputlocation = input(\"please enter persons location : \")\r\ninputpresentidea = input(\"please enter persons present : \")\r\ninputnice = input(\"please enter if the persons nice? : \")\r\npersontoadd = person(inputname,inputlocation,inputpresentidea,inputnice)\r\nlistofpeople.append(persontoadd)\r\n```\r\n\r\n## Source  \r\nhttps://www.tes.com/teaching-resource/christmas-coding-challenge-using-oop-12223499\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/16/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/15",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/15/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/15/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/15/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/15",
      "id": 586491815,
      "node_id": "MDU6SXNzdWU1ODY0OTE4MTU=",
      "number": 15,
      "title": "MinMaxAccount",
      "user": {
        "login": "Ela-Zaman",
        "id": 53617549,
        "node_id": "MDQ6VXNlcjUzNjE3NTQ5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/53617549?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ela-Zaman",
        "html_url": "https://github.com/Ela-Zaman",
        "followers_url": "https://api.github.com/users/Ela-Zaman/followers",
        "following_url": "https://api.github.com/users/Ela-Zaman/following{/other_user}",
        "gists_url": "https://api.github.com/users/Ela-Zaman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Ela-Zaman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Ela-Zaman/subscriptions",
        "organizations_url": "https://api.github.com/users/Ela-Zaman/orgs",
        "repos_url": "https://api.github.com/users/Ela-Zaman/repos",
        "events_url": "https://api.github.com/users/Ela-Zaman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Ela-Zaman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1899343561,
          "node_id": "MDU6TGFiZWwxODk5MzQzNTYx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Easy",
          "name": "Easy",
          "color": "8fc400",
          "default": false,
          "description": "Difficulty Level - Easy"
        },
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-23T20:17:37Z",
      "updated_at": "2020-03-24T14:22:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n\r\n## Overview\r\nYou are an intern in the \"CoinBox\" Bank's IT department. Your supervisor asked you to add some functionality to the previous code. The code contains a large class BankingAccount with many methods including:\r\nMethod/Constructor | Description\r\n-- | --\r\n`BankingAccount(Startup s)` | constructs a BankingAccount object using information in the Startup object\r\n`void debit(int debit)`            | records the given debit\r\n`void credit(int credit)`           | records the given credit\r\n`int getBalance()`                 | returns current balance \r\n\r\nYour job is to add a class MinMaxAccount that will calculate the minimum and maximum balances ever recorded for the account.\r\n\r\n\r\n## Assumptions\r\n\r\n1. Startup includes basic information such as `account_no`, `account_type` and a method that returns the initial balance.\r\n2.  Only the `debit` and `credit` methods change an account's balance.\r\n\r\n \r\n## Task\r\n\r\n1.  Design the `class Startup` that includes minimum basic information about the account. You should provide a `method getInitialBalance()` that returns the initial balance.\r\n2. Implement the `class BankingAccount`. The account's constructor sets the initial balance based on the Startup information. \r\n3. Design a new `class MinMaxAccount ` whose instances can be used in place of a BankingAccount object but include new behaviour of remembering the minimum and maximum balances ever recorded for the account. You should provide the same methods as the superclass, as well as the following new behaviour:\r\n\r\nMethod/Constructor | Description\r\n-- | --\r\n`MinMaxAccount(Startup s)`  | constructs a MinMaxAccount object using information in the Startup object\r\n`int getMin()` | returns minimum balance \r\n`int getMax()` | returns maximum balance \r\n\r\n\r\n## Source\r\n\r\nhttps://practiceit.cs.washington.edu/problem/view/bjp5/chapter9/e9-MinMaxAccount\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/15/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/14",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/14/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/14/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/14/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/14",
      "id": 586002821,
      "node_id": "MDU6SXNzdWU1ODYwMDI4MjE=",
      "number": 14,
      "title": "Zoned Out",
      "user": {
        "login": "x-e-r-g",
        "id": 45358935,
        "node_id": "MDQ6VXNlcjQ1MzU4OTM1",
        "avatar_url": "https://avatars1.githubusercontent.com/u/45358935?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/x-e-r-g",
        "html_url": "https://github.com/x-e-r-g",
        "followers_url": "https://api.github.com/users/x-e-r-g/followers",
        "following_url": "https://api.github.com/users/x-e-r-g/following{/other_user}",
        "gists_url": "https://api.github.com/users/x-e-r-g/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/x-e-r-g/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/x-e-r-g/subscriptions",
        "organizations_url": "https://api.github.com/users/x-e-r-g/orgs",
        "repos_url": "https://api.github.com/users/x-e-r-g/repos",
        "events_url": "https://api.github.com/users/x-e-r-g/events{/privacy}",
        "received_events_url": "https://api.github.com/users/x-e-r-g/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899348026,
          "node_id": "MDU6TGFiZWwxODk5MzQ4MDI2",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Hard",
          "name": "Hard",
          "color": "ff7900",
          "default": false,
          "description": "Difficulty Level - Hard"
        },
        {
          "id": 1914430954,
          "node_id": "MDU6TGFiZWwxOTE0NDMwOTU0",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/SOLID",
          "name": "SOLID",
          "color": "0052cc",
          "default": false,
          "description": "Topic - SOLID Principles"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-23T07:53:23Z",
      "updated_at": "2020-03-23T14:36:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n## Overview\r\nYou are developing a virtual reality game named _Zoned Out_. Before the game starts, the player is asked a series of questions one by one. Based on the answers, the player is automatically redirected to a realm among the following four:\r\n- **Warzone**: The player finds herself in a world war scenario as a soldier.\r\n- **Pirate Era**: The player is a member of a Pirate crew in a pirate ship and marches forward to conquer the sea. \r\n- **Barbie Paradise**: The player is a prince trying to save his kingdom from Viola, the queen of darkness. \r\n- **Year 500K**: The player is a citizen of really advanced human generation. Flying cars, Robots, Skyscrapers even there is a bridge to the Moon.\r\n\r\nDifferent realms are filled with different things to be explored and experienced by the player, but for now, you do not have to jump into the vast details of these realms.\r\n\r\n## Assumptions\r\n- The player does not have the control of which realm she will end up into, only her answers will determine that\r\n- The player will not be able to be at multiple realms at the same time.\r\n- The player will not be able to get into different instances of the same realm\r\n- You have plan to add new realms to keep the engagement of the players\r\n\r\n## Task\r\n- Implement this game where players have to answer the questions to end up in a virtual reality accordingly.\r\n\r\n## Notes\r\nYou don't have to worry about the features of the realms.\r\n\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/14/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/13",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/13/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/13/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/13/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/13",
      "id": 585666342,
      "node_id": "MDU6SXNzdWU1ODU2NjYzNDI=",
      "number": 13,
      "title": "Brush Everyday and Keep Smiling ",
      "user": {
        "login": "x-e-r-g",
        "id": 45358935,
        "node_id": "MDQ6VXNlcjQ1MzU4OTM1",
        "avatar_url": "https://avatars1.githubusercontent.com/u/45358935?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/x-e-r-g",
        "html_url": "https://github.com/x-e-r-g",
        "followers_url": "https://api.github.com/users/x-e-r-g/followers",
        "following_url": "https://api.github.com/users/x-e-r-g/following{/other_user}",
        "gists_url": "https://api.github.com/users/x-e-r-g/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/x-e-r-g/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/x-e-r-g/subscriptions",
        "organizations_url": "https://api.github.com/users/x-e-r-g/orgs",
        "repos_url": "https://api.github.com/users/x-e-r-g/repos",
        "events_url": "https://api.github.com/users/x-e-r-g/events{/privacy}",
        "received_events_url": "https://api.github.com/users/x-e-r-g/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899348026,
          "node_id": "MDU6TGFiZWwxODk5MzQ4MDI2",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Hard",
          "name": "Hard",
          "color": "ff7900",
          "default": false,
          "description": "Difficulty Level - Hard"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-03-22T08:07:03Z",
      "updated_at": "2020-03-22T13:46:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n## Overview\r\nYou own a toothpaste factory that makes toothpaste of different favours and functionalities. The toothpaste factory first gathers favour ingredients then mixes the collected favour ingredients, gathers the functionality ingredients then mixes the collected functionality ingredients. After that, it mixes these two different mixes with some essential and basic ingredients. Finally, it tests and finalizes the toothpaste. The work does not end here, this prepared toothpaste is sent to the packaging client called the \"Packetiers\" but we'll come to that later.  \r\n- **Toothpaste are provided in three base favours**: Mint, Lemon and Clove.\r\n- **Toothpaste are provided for three base functionalities**: Brightening teeth, Strengthening gums and better breathing.  \r\n\r\nNote that toothpaste can be made by combining different favours and different functionalities. For making these different variations of toothpaste every task remains the same except ingredients gathering. The favour ingredients are collected according to the favours and the functionality ingredients are collected according to the functionalities.  \r\nAfter producing the toothpaste it is sent to the packaging team, the Packetiers. They package the toothpaste and sell it worldwide. Here comes another problem, this toothpaste factory is pretty old, so it only can produce gel-like toothpaste, but the new version of Packetiers only accepts liquid toothpaste.  \r\n\r\n\r\n## Example\r\nThere's a huge demand for mint and clove flavoured toothpaste that helps brighten up teeth and strengthen gums. So, the Packetiers proposed you to provide them such toothpaste so that they can package and release it in the market.  \r\n\r\n## Assumptions\r\n- You may want to add new favour or functionality in future.\r\n- You may not have the investment needed to change the whole design of the factory\r\n\r\n## Task\r\n- Build the described toothpaste factory\r\n- Solve the problem of providing the client what they want without shuffling the design of the factory.\r\n\r\n<!-- Leave this part as it is -->\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/13/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/12",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/12/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/12/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/12/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/12",
      "id": 585425840,
      "node_id": "MDU6SXNzdWU1ODU0MjU4NDA=",
      "number": 12,
      "title": "Summation Tree",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899344523,
          "node_id": "MDU6TGFiZWwxODk5MzQ0NTIz",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Medium",
          "name": "Medium",
          "color": "fff200",
          "default": false,
          "description": "Difficulty Level - Medium"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-21T04:11:57Z",
      "updated_at": "2020-03-21T04:21:12Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "<!-- \r\n!! DO NOT REMOVE !!\r\nThe HTML comment like this is for guidelines to editor/creator of a problem. \r\nYou can remove these when you are done writing up the problem. However, if you see a \"!! DO NOT REMOVE !!\"  at the beginning of a comment block, do not remove that block.\r\nYou can leave comments for future editors, you may want to leave a \"!! DO NOT REMOVE !!\" message in that case.\r\n-->\r\n\r\n## Overview\r\nIn a summation tree\r\n1. Each node has a value\r\n   1. Value of a leaf node is a given number\r\n   2. Value of a non-leaf node is the summation of values its child nodes\r\n2. Each node may have zero or more child nodes.\r\n\r\n## Example\r\n```\r\n     9\r\n     |\r\n ____|____\r\n|    |    |\r\n1    2    6\r\n```\r\nHere the values of 1, 2 and 6 are given, but the value of 9 is calculated.\r\n\r\n## Task\r\nDesign the summation tree data structure.\r\n\r\n## Source\r\nThis problem was originally given to SWE 17 students in their OOC-II course.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n\r\n#### Reminders\r\n* <sup>React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.</sup>\r\n* <sup>Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.</sup>\r\n* <sup>Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.</sup>\r\n* <sup>Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).</sup>",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/12/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/11",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/11/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/11/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/11/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/11",
      "id": 585018579,
      "node_id": "MDU6SXNzdWU1ODUwMTg1Nzk=",
      "number": 11,
      "title": "Transformer",
      "user": {
        "login": "ratul-mahjabin",
        "id": 60655884,
        "node_id": "MDQ6VXNlcjYwNjU1ODg0",
        "avatar_url": "https://avatars2.githubusercontent.com/u/60655884?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ratul-mahjabin",
        "html_url": "https://github.com/ratul-mahjabin",
        "followers_url": "https://api.github.com/users/ratul-mahjabin/followers",
        "following_url": "https://api.github.com/users/ratul-mahjabin/following{/other_user}",
        "gists_url": "https://api.github.com/users/ratul-mahjabin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ratul-mahjabin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ratul-mahjabin/subscriptions",
        "organizations_url": "https://api.github.com/users/ratul-mahjabin/orgs",
        "repos_url": "https://api.github.com/users/ratul-mahjabin/repos",
        "events_url": "https://api.github.com/users/ratul-mahjabin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ratul-mahjabin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899337889,
          "node_id": "MDU6TGFiZWwxODk5MzM3ODg5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Very%20Easy",
          "name": "Very Easy",
          "color": "1e9600",
          "default": false,
          "description": "Difficulty Level - Very Easy"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-20T11:51:44Z",
      "updated_at": "2020-03-20T13:32:52Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "## Overview\r\nYour friend Boltu is new to a software company. The company works with android applications. Your friend is assigned to make a program where the same button will perform several tasks in an application. As you are an OOP guru he came to you to help him in the problem. He promised that he will give you a treat in a famous restaurant. Can you help him?\r\n\r\n## Example\r\nA power button can do both switch on and off operations.\r\n\r\n## Assumptions\r\nAs the application is under development, The same button may be assigned for more than two operations in the near future. \r\n\r\n## Task\r\nImplement the code for which Boltu came to you.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/11/reactions",
        "total_count": 2,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/10",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/10/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/10/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/10/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/10",
      "id": 584815873,
      "node_id": "MDU6SXNzdWU1ODQ4MTU4NzM=",
      "number": 10,
      "title": "A perfect day",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899337889,
          "node_id": "MDU6TGFiZWwxODk5MzM3ODg5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Very%20Easy",
          "name": "Very Easy",
          "color": "1e9600",
          "default": false,
          "description": "Difficulty Level - Very Easy"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-20T03:13:46Z",
      "updated_at": "2020-03-20T03:25:48Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "## Overview\r\nYour astronomer friend has recently observed a \"perfect planet\". Everything about the motion of the planet seems very perfect.  \r\nA day, called a \"perfect day\", on the planet is equal to exactly 16 earth hours. It has just one moon, called the \"perfect moon\", that rotates around it in exactly 32 days. The planet rotates around the \"perfect star\" in exactly 256 perfect days.\r\n\r\nYour friend wants you to build a simulation software for the perfect planet. To begin with, you are requested to make date and time simulations for the planet.\r\n\r\n## Task\r\n- Create a `PerfectDate` class that represents a perfect day of the perfect planet.\r\n- The `PerfectDate` class should have a `year`, a `month` and a `date`.\r\n- The `PerfectDate` class must be [immutable](https://en.wikipedia.org/wiki/Immutable_object), that means that the values of the PerfectDate cannot be changed after initialization.\r\n- The `PerfectDate` class should have a method `nextDay` that should return the next day of the perfect calendar.\r\n\r\n## Example\r\nThe examples are in yyyy/MM/dd format.\r\n- The day after `1813/01/03` is `1813/01/04`\r\n- The day after `1813/01/32` is `1813/02/01`\r\n- The day after `1813/08/32` is `1814/01/01`\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/10/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/9",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/9/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/9/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/9/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/9",
      "id": 584471784,
      "node_id": "MDU6SXNzdWU1ODQ0NzE3ODQ=",
      "number": 9,
      "title": "Toy maker",
      "user": {
        "login": "sadatbs",
        "id": 43805189,
        "node_id": "MDQ6VXNlcjQzODA1MTg5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/43805189?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sadatbs",
        "html_url": "https://github.com/sadatbs",
        "followers_url": "https://api.github.com/users/sadatbs/followers",
        "following_url": "https://api.github.com/users/sadatbs/following{/other_user}",
        "gists_url": "https://api.github.com/users/sadatbs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sadatbs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sadatbs/subscriptions",
        "organizations_url": "https://api.github.com/users/sadatbs/orgs",
        "repos_url": "https://api.github.com/users/sadatbs/repos",
        "events_url": "https://api.github.com/users/sadatbs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sadatbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1899337889,
          "node_id": "MDU6TGFiZWwxODk5MzM3ODg5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Very%20Easy",
          "name": "Very Easy",
          "color": "1e9600",
          "default": false,
          "description": "Difficulty Level - Very Easy"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-19T14:54:59Z",
      "updated_at": "2020-03-20T04:59:24Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!-- \r\nThe HTML comment like this is for guidlines to editor/creator of a problem. \r\nPlease do not remove any such comments unless you created it.\r\n\r\n**Use Labels**\r\nThere are five difficulty levels: very easy, easy, medium, hard, very hard. Mention exactly one that represents the difficulty level of your problem.\r\nThere are some labels representing topics, example - Design Patterns, SOLID, refactoring and more. Use any number of such labels that is related to your problem.\r\nUsing correct labels will help people finding the problem they need easily.\r\n-->\r\n<!-- \r\nLink the related problems. Specially consider the following cases:\r\n* Is it required/recommended to solve another problem before trying this one?\r\n* Is solving another problem make solving this one easy?\r\n* Is this a varient of another problem?\r\n-->\r\n\r\n## Overview\r\n<!-- \r\nGive a overview of the problem.\r\nThis section is mandatory\r\n-->\r\nAs i was going to watch TV, i saw that my cousin brother is already watching cartoon on TV and very much excited . So I decided to make him even happier by making 3 types of toys like 3 characters from the cartoon for him-\r\n\r\n1. Thar:  swings with hammer 🔨  .\r\n\r\n1. Dogverine:  Slashes with knives  🔪  .\r\n\r\n1. White shadow: Fires with gun 🔫 .\r\n\r\nThe purpose of each toy is to _entertain_ my cousin by making sounds according to their weapons. Now that you know the details of my plan, **Help me make the toys for him** 😄 .\r\n## Example\r\n<!-- \r\nGive some examples of scenario for better understanding.\r\nTry to use specific names and numbers.\r\nBad example: Age of person 1 is x\r\nGood example: Age of Fatema is 30 years\r\n\r\nThis section is highly recommended, but not mandatory.\r\n-->\r\nThar: \"Bump\".\r\nDogverine: \"Slash\".\r\nWhite Shadow:\"Pew pew\".\r\n## Assumptions\r\n<!-- \r\nIf there are some assumption that the solver should have, mention here.\r\nThis section is optional.\r\n-->\r\n\r\n- The characters in the cartoon are humans so each of the toys has same properties like- limbs,body,etc. But each of them has different weapon and action.\r\n\r\n## Task\r\n<!-- \r\nSpecifically mention what to do.\r\nThis section is mandatory.\r\n-->\r\n\r\n- Implement code so that the toys can _entertain_ my cousin.\r\n\r\n<!-- \r\nIs there something else you need so say? Anything!\r\nThis section is optional.\r\n-->\r\n<!-- \r\nDid you collect the problem from another source? Please mention with link if possible.\r\nThis section is optional.\r\n-->\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/9/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/8",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/8/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/8/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/8/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/8",
      "id": 582887483,
      "node_id": "MDU6SXNzdWU1ODI4ODc0ODM=",
      "number": 8,
      "title": "Shaping up the shapes - the ugly",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1899343561,
          "node_id": "MDU6TGFiZWwxODk5MzQzNTYx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Easy",
          "name": "Easy",
          "color": "8fc400",
          "default": false,
          "description": "Difficulty Level - Easy"
        },
        {
          "id": 1915230409,
          "node_id": "MDU6TGFiZWwxOTE1MjMwNDA5",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Fundamentals",
          "name": "Fundamentals",
          "color": "0052cc",
          "default": false,
          "description": "Topic - OOP Fundamentals like Polymorphism, Inheritance, Encapsulation Abstraction etc"
        },
        {
          "id": 1914436511,
          "node_id": "MDU6TGFiZWwxOTE0NDM2NTEx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Refactoring",
          "name": "Refactoring",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Refactoring"
        },
        {
          "id": 1914430954,
          "node_id": "MDU6TGFiZWwxOTE0NDMwOTU0",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/SOLID",
          "name": "SOLID",
          "color": "0052cc",
          "default": false,
          "description": "Topic - SOLID Principles"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-03-17T09:50:41Z",
      "updated_at": "2020-03-19T16:49:03Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Related problem\r\n#6 is the same problem, but the given code is already a bit refactored there. You should try this one first and then move to #6.\r\n\r\n## Overview\r\nYou are a junior developer working on an educational software for primary school students. The team is currently focusing on geometry lessons. You wrote the code below yesterday which is working fine (passing the test cases). However, your team lead said the code has poor quality and needs to be [refactored](https://refactoring.com/).\r\n\r\n**The code in Java:**  \r\n```Java\r\nclass ShapeList {\r\n    public double[] sizes;\r\n    public String[] types;\r\n\r\n    public double totalPerimeter() {\r\n        double total = 0;\r\n        for (int i = 0; i < sizes.length; i++) {\r\n            if (types[i] == \"square\")\r\n                total += 4 * sizes[i];\r\n            else if (types[i] == \"circle\")\r\n                total += 2 * 3.1416 * sizes[i];\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    public double totalArea() {\r\n        double total = 0;\r\n        for (int i = 0; i < sizes.length; i++) {\r\n            if (types[i] == \"square\")\r\n                total += sizes[i] * sizes[i];\r\n            else if (types[i] == \"circle\")\r\n                total += 3.1416 * sizes[i] * sizes[i];\r\n        }\r\n\r\n        return total;\r\n    }\r\n}\r\n\r\n// A test for ease of refactoring.\r\n// No need to copy this part if you are not familiar with Unit Testing.\r\nclass ShapeListTest {\r\n    @Test\r\n    void testAll() {\r\n        ShapeList shapeList = new ShapeList();\r\n        shapeList.sizes = new double[]{10, 5, 1};\r\n        shapeList.types = new String[]{\"square\", \"square\", \"circle\"};\r\n\r\n        Assertions.assertEquals(66.2832, shapeList.totalPerimeter());\r\n        Assertions.assertEquals(128.1416, shapeList.totalArea());\r\n    }\r\n}\r\n```\r\n\r\n**The code in Python. Given by @rtlmhjbn** \r\n```python\r\nimport unittest\r\n\r\n\r\nclass ShapeList:\r\n    sizes = []\r\n    types = []\r\n\r\n    def totalPerimeter(self):\r\n        total = 0\r\n        for i in range(len(self.sizes)):\r\n            if self.types[i] == \"square\":\r\n                total += 4 * self.sizes[i]\r\n            elif self.types[i] == \"circle\":\r\n                total += 2 * 3.1416 * self.sizes[i]\r\n\r\n        return total\r\n\r\n    def totalArea(self):\r\n        total = 0\r\n        for i in range(len(self.sizes)):\r\n            if self.types[i] == \"square\":\r\n                total += self.sizes[i] * self.sizes[i]\r\n            elif self.types[i] == \"circle\":\r\n                total += 3.1416 * self.sizes[i] * self.sizes[i]\r\n\r\n        return total\r\n\r\n\r\n# A test for ease of refactoring.\r\n# No need to copy this part if you are not familiar with Unit Testing.\r\n\r\n\r\nclass ShapeListTest(unittest.TestCase):\r\n\r\n    def testALL(self):\r\n        shapeList = ShapeList()\r\n        shapeList.sizes = [10, 5, 1]\r\n        shapeList.types = [\"square\", \"square\", \"circle\"]\r\n        self.assertEqual(66.2832, shapeList.totalPerimeter())\r\n        self.assertEqual(128.1416, shapeList.totalArea())\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\n**Code Request: Someone please provide the code in other languages.**\r\n\r\n## Assumptions\r\nThe software is under development. Triangle and Rectangles are coming soon.\r\n\r\n## Task\r\nRefactor the given code.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/8/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/7",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/7/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/7/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/7/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/7",
      "id": 582511337,
      "node_id": "MDU6SXNzdWU1ODI1MTEzMzc=",
      "number": 7,
      "title": "Battle For the Title",
      "user": {
        "login": "sadatbs",
        "id": 43805189,
        "node_id": "MDQ6VXNlcjQzODA1MTg5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/43805189?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sadatbs",
        "html_url": "https://github.com/sadatbs",
        "followers_url": "https://api.github.com/users/sadatbs/followers",
        "following_url": "https://api.github.com/users/sadatbs/following{/other_user}",
        "gists_url": "https://api.github.com/users/sadatbs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sadatbs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sadatbs/subscriptions",
        "organizations_url": "https://api.github.com/users/sadatbs/orgs",
        "repos_url": "https://api.github.com/users/sadatbs/repos",
        "events_url": "https://api.github.com/users/sadatbs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sadatbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1899348026,
          "node_id": "MDU6TGFiZWwxODk5MzQ4MDI2",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Hard",
          "name": "Hard",
          "color": "ff7900",
          "default": false,
          "description": "Difficulty Level - Hard"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-16T18:21:04Z",
      "updated_at": "2020-03-17T05:48:01Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "## Overview\r\nIn a multiplayer game called apex-nites, a player needs to find guns and shoot at other players to earn points. The last player to stay alive wins the game. (It's a Battle Royale game!!).  \r\nAbout 60 people play in a match in teams of 3. There is a ranking system in the match. The Player who defeats 3 enemies first gets the title of \"**POINTS LEADER**\". He remains points leader as long as he has the highest points. If any other player earns more points than him/her at any point of time in the match the later is appointed the title of point leader. But there exists only one point leader at any point of time in a match.\r\n\r\n## Example\r\n\r\n* At 3rd minute of the game\r\nplayer1 = 2 points\r\nplayer2 = 1 point\r\n_No points leader_\r\n* At 5th minute of the game\r\nplayer1 = 3 points ( points leader)\r\nplayer2 = 2 points\r\n* at 8th minute of the game\r\nplayer1 = 3 points\r\nplayer2 = 5 points (points leader)\r\n\r\nAbove are assuming that the other players have lower points than player 1 and player 2.\r\n\r\n## Assumptions\r\n\r\n- There exists only _One points leader_ at any point of time in the match.\r\n- the title is created only once and the _same title transferred_ to other players.\r\n- Even if two players attain the highest points or 3 points at the same time _the title is assigned to only one of them_ based on the difference in the fraction of time. The faster one gets the title.\r\n\r\n## Task\r\n- implement code so that point leader title is only created _once_ when no player in the current match has the title.\r\n- the title _transfers_ to a new player when he earns it. **The title is not created again**.\r\n- make your code safe so that title creation is done only once.\r\n\r\n## Notes\r\nDon't bother with the implementation of the point system rather focus on the creation and transfer of title.\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/7/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/6",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/6/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/6/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/6/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/6",
      "id": 581962178,
      "node_id": "MDU6SXNzdWU1ODE5NjIxNzg=",
      "number": 6,
      "title": "Shaping up the shapes - the bad",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1899343561,
          "node_id": "MDU6TGFiZWwxODk5MzQzNTYx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Easy",
          "name": "Easy",
          "color": "8fc400",
          "default": false,
          "description": "Difficulty Level - Easy"
        },
        {
          "id": 1914436511,
          "node_id": "MDU6TGFiZWwxOTE0NDM2NTEx",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Refactoring",
          "name": "Refactoring",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Refactoring"
        },
        {
          "id": 1914430954,
          "node_id": "MDU6TGFiZWwxOTE0NDMwOTU0",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/SOLID",
          "name": "SOLID",
          "color": "0052cc",
          "default": false,
          "description": "Topic - SOLID Principles"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-03-16T03:03:27Z",
      "updated_at": "2020-03-18T02:55:41Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Related problem\r\n#8 is the same problem, but the given code is even worse. You should try #8 before trying this problem.\r\n\r\n## Overview\r\nYou are a junior developer working on an educational software for primary school students. The team is currently focusing on geometry lessons. You wrote the code below yesterday which is working fine (passing the test cases). However, your team lead said the code has poor quality and needs to be [refactored](https://refactoring.com/).\r\n\r\n**The code in C# 8.**  \r\n```C#\r\nclass Square\r\n{\r\n    public double length;\r\n    public Square(double length)\r\n    {\r\n        this.length = length;\r\n    }\r\n}\r\n\r\nclass Circle\r\n{\r\n    public double radius;\r\n\r\n    public Circle(double radius)\r\n    {\r\n        this.radius = radius;\r\n    }\r\n}\r\n\r\nclass ShapeList\r\n{\r\n    object[] shapes;\r\n    public ShapeList(object[] shapes)\r\n    {\r\n        this.shapes = shapes;\r\n    }\r\n\r\n    public double TotalPeremeter()\r\n    {\r\n        double total = 0;\r\n        foreach (var shape in shapes)\r\n        {\r\n            if (shape is Square sq)\r\n                total += 4 * sq.length;\r\n            else if (shape is Circle c)\r\n                total += 2 * 3.1416 * c.radius;\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    public double TotalArea()\r\n    {\r\n        double total = 0;\r\n        foreach (var shape in shapes)\r\n        {\r\n            if (shape is Square sq)\r\n                total += sq.length * sq.length;\r\n            else if (shape is Circle c)\r\n                total += 3.1416 * c.radius * c.radius;\r\n        }\r\n\r\n        return total;\r\n    }\r\n}\r\n\r\n// A test for ease of refactoring.\r\n// No need to copy this part if you are not familiar with Unit Testing.\r\npublic class ShapeListTest\r\n{\r\n    [Fact]\r\n    void testAll()\r\n    {\r\n        var shapeList = new ShapeList(new object[] {\r\n            new Square(10),\r\n            new Square(5),\r\n            new Circle(1)\r\n        });\r\n\r\n        Assert.Equal(66.2832, shapeList.TotalPeremeter());\r\n        Assert.Equal(128.1416, shapeList.TotalArea());\r\n    }\r\n}\r\n```\r\n\r\n**The code to refactor for Python programmers. Translated from C# by @mdnishat27**\r\n\r\n```python\r\n\r\nclass Square:\r\n\tdef __init__(self, length):\r\n\t\tself.length = length\r\n\r\n\r\n\r\nclass Circle:\r\n\tdef __init__(self, radius):\r\n\t\tself.radius = radius\r\n\r\n\r\n\r\nclass ShapeList:\r\n\tdef __init__(self, shapes):\r\n\t\tself.shapes = shapes\r\n\r\n\tdef TotalPeremeter(self):\r\n\t\ttotal = 0\r\n\t\tfor shape in self.shapes:\r\n\t\t\tif isinstance(shape, Square):\r\n\t\t\t\ttotal += 4 * shape.length\r\n\t\t\telif isinstance(shape, Circle):\r\n\t\t\t\ttotal += 2 * 3.1416 * shape.radius\r\n\t\t\t\r\n\t\treturn total\r\n\r\n\tdef TotalArea(self):\r\n\t\ttotal = 0\r\n\t\tfor shape in self.shapes:\r\n\t\t\tif isinstance(shape, Square):\r\n\t\t\t\ttotal += shape.length * shape.length\r\n\t\t\telif isinstance(shape, Circle):\r\n\t\t\t\ttotal += 3.1416 * shape.radius * shape.radius\r\n \r\n\t\treturn total\r\n\r\n# A test for ease of refactoring.\r\n# No need to copy this part if you are not familiar with Unit Testing.\r\nimport unittest \r\n\r\nclass ShapeListTest(unittest.TestCase):\r\n\r\n\tdef testALL(self):\r\n\t\tshapelist = ShapeList([Square(10),Square(5),Circle(1)])\r\n\t\tself.assertEqual(66.2832, shapelist.TotalPeremeter())\r\n\t\tself.assertEqual(128.1416, shapelist.TotalArea())\r\n\r\nif __name__ == '__main__':\r\n\tunittest.main()\r\n```\r\n\r\nThe code in the problem in Java. Given by @rtlmhjbn \r\n```java\r\nclass Square {\r\n    public double length;\r\n\r\n    public Square(double length) {\r\n        this.length = length;\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Circle {\r\n    public double radius;\r\n\r\n    public Circle(double radius) {\r\n        this.radius = radius;\r\n    }\r\n\r\n}\r\n\r\nclass ShapeList {\r\n    ArrayList<Object> shapes;\r\n\r\n    public ShapeList(ArrayList<Object> shape) {\r\n        shapes = shape;\r\n\r\n    }\r\n\r\n    public double TotalPeremeter() {\r\n        double total = 0;\r\n        for (Object shape : shapes) {\r\n            if (shape instanceof Square) {\r\n                Square sq = (Square) shape;\r\n                total += 4 * sq.length;\r\n            } else if (shape instanceof Circle) {\r\n                Circle c = (Circle) shape;\r\n                total += 2 * 3.1416 * c.radius;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n\r\n    public double TotalArea() {\r\n        double total = 0;\r\n        for (Object shape : shapes) {\r\n            if (shape instanceof Square) {\r\n                Square sq = (Square) shape;\r\n                total += sq.length * sq.length;\r\n            } else if (shape instanceof Circle) {\r\n                Circle c = (Circle) shape;\r\n                total += 3.1416 * c.radius * c.radius;\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n}\r\n\r\n// A test for ease of refactoring.\r\n// No need to copy this part if you are not familiar with Unit Testing.\r\npublic class ShapeListTest  {\r\n   @Test\r\n   void testAll(){\r\n        Square sq1 = new Square(10);\r\n        Square sq2 = new Square(5);\r\n        Circle c = new Circle(1);\r\n\r\n        ArrayList<Object> Alist = new ArrayList<Object>(5);\r\n\r\n        Alist.add(sq1);\r\n        Alist.add(sq2);\r\n        Alist.add(c);\r\n\r\n        ShapeList shapeList = new ShapeList(Alist);\r\n        Assertions.assertEquals(66.2832, shapeList.TotalPeremeter());\r\n        Assertions.assertEquals(128.1416, shapeList.TotalArea());\r\n\r\n    }\r\n}\r\n\r\n```\r\n**Code Request: Someone please provide the code in other languages.**\r\n\r\n## Assumptions\r\nThe software is under development. Triangle and Rectangles are coming soon.\r\n\r\n## Task\r\nRefactor the given code.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/6/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/5",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/5/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/5/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/5/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/5",
      "id": 581194301,
      "node_id": "MDU6SXNzdWU1ODExOTQzMDE=",
      "number": 5,
      "title": "Which gun to carry?",
      "user": {
        "login": "sadatbs",
        "id": 43805189,
        "node_id": "MDQ6VXNlcjQzODA1MTg5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/43805189?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sadatbs",
        "html_url": "https://github.com/sadatbs",
        "followers_url": "https://api.github.com/users/sadatbs/followers",
        "following_url": "https://api.github.com/users/sadatbs/following{/other_user}",
        "gists_url": "https://api.github.com/users/sadatbs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sadatbs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sadatbs/subscriptions",
        "organizations_url": "https://api.github.com/users/sadatbs/orgs",
        "repos_url": "https://api.github.com/users/sadatbs/repos",
        "events_url": "https://api.github.com/users/sadatbs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sadatbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1899348026,
          "node_id": "MDU6TGFiZWwxODk5MzQ4MDI2",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Hard",
          "name": "Hard",
          "color": "ff7900",
          "default": false,
          "description": "Difficulty Level - Hard"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-14T12:44:35Z",
      "updated_at": "2020-03-17T05:48:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "## Overview\r\nIn a multiplayer game called apex-nites, a player needs to find a gun and shoot at other players to earn points. The last player to stay alive wins the game (It's a Battle Royale game).\r\nA player can carry only one gun as he has only one gun holder. But he can choose from a variety of guns. Moreover, he can swap his gun with an enemy's gun he defeated in the middle of the game. Each gun has a set of properties with different magnitudes:\r\n\r\n- **Damage:** the damage bullets inflict upon the enemy by hitting them.\r\n\r\n- **Fire-rate:** The number of bullets fire in unit time.\r\n\r\n- **bullet drop:** bullets being projectiles drop according to distance and gun types.\r\n\r\nthe varieties of guns are: \r\n\r\n- **Spitfear:** Damage=medium, fire-rate = medium,bullet drop = medium\r\n\r\n- **Karbine:** Damage = low , fire-rate = high, bullet drop = low\r\n\r\n- **Shortbow:** Damage = high, fire-rate =low, bullet drop = high\r\n\r\nThe player chooses and replaces guns according to his convenience and advantage. The purpose of each gun is to fire bullets with its set of properties.\r\n## Example\r\n\r\n- player1: carries Spitfear initially, changes it to karbine after defeating first enemy and finally defeats the last enemy with havok.\r\n\r\n## Assumptions\r\n\r\n- player can carry only one gun with him in the entire game.\r\n\r\n- player can swap gun at anytime.\r\n\r\n- _new guns might be added to the game at any time._\r\n\r\n## Task\r\n\r\n- implement code so that a player can carry _any one type_ of gun.\r\n\r\n- the guns should be _interchangeable_ with one another.\r\n\r\n## Notes\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/5/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/4",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/4/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/4/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/4/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/4",
      "id": 581037414,
      "node_id": "MDU6SXNzdWU1ODEwMzc0MTQ=",
      "number": 4,
      "title": "Accurate Shooting",
      "user": {
        "login": "sadatbs",
        "id": 43805189,
        "node_id": "MDQ6VXNlcjQzODA1MTg5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/43805189?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sadatbs",
        "html_url": "https://github.com/sadatbs",
        "followers_url": "https://api.github.com/users/sadatbs/followers",
        "following_url": "https://api.github.com/users/sadatbs/following{/other_user}",
        "gists_url": "https://api.github.com/users/sadatbs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sadatbs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sadatbs/subscriptions",
        "organizations_url": "https://api.github.com/users/sadatbs/orgs",
        "repos_url": "https://api.github.com/users/sadatbs/repos",
        "events_url": "https://api.github.com/users/sadatbs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sadatbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1914430235,
          "node_id": "MDU6TGFiZWwxOTE0NDMwMjM1",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Design%20Patterns",
          "name": "Design Patterns",
          "color": "0052cc",
          "default": false,
          "description": "Topic - Design Patterns"
        },
        {
          "id": 1899348026,
          "node_id": "MDU6TGFiZWwxODk5MzQ4MDI2",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Hard",
          "name": "Hard",
          "color": "ff7900",
          "default": false,
          "description": "Difficulty Level - Hard"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-03-14T04:53:09Z",
      "updated_at": "2020-03-17T05:48:49Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "## Overview\r\nIn a multiplayer game called _apex-nites_, a player needs to find guns and shoot at other players to earn points. The last player to stay alive wins the game.(It's a Battle Royale game)\r\nInitially the gun a player gets doesn't have any attachments. And without attachments the guns have high recoil( the backward momentum when a gun is shot) and low accuracy.\r\nThe players can buy and  attach attachments to the gun to reduce recoil and increase accuracy. The attachments and their advantages are:\r\n\r\n- **Barrel stabilize**r:  +15 unit accuracy\r\n\r\n- **Standard stalk**:  +40 unit accuracy\r\n\r\n- **Hop up**: +30 unit accuracy\r\n\r\nIncreased accuracy in guns offer advantages to player in defeating their opponents.\r\n## Example\r\n\r\n-  player-1:  attaches only hop-up.\r\n-  player-2: attaches hop-up first then barrel stabilizer.\r\n-  player-3: attaches barrel stabilizer first then hop-up.\r\n-  player-3: attaches barrel stabilizer first then hop-up then Standard stalk.\r\n\r\n\r\n## Assumptions\r\n\r\n- A gun with no attachments has low accuracy.(1 unit  accuracy).\r\n- A player buys attachments with the points he earns by shooting other players. So the gamer earns \r\n   game currency as the game advances.\r\n- Higher accuracy attachments are costly and lower accuracy attachments are cheap.\r\n\r\n## Task\r\n\r\n- Code so that a player can attach attachments to a basic gun in _any combination_.\r\n\r\n- The attachments are to be attached at _runtime_.\r\n\r\n## Notes\r\n- The problem could be done with inheritance but the goal is to accomplish it at runtime.\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/4/reactions",
        "total_count": 4,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/2",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/2/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/2/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/2/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/2",
      "id": 580668648,
      "node_id": "MDU6SXNzdWU1ODA2Njg2NDg=",
      "number": 2,
      "title": "A stack for everyone",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1899344523,
          "node_id": "MDU6TGFiZWwxODk5MzQ0NTIz",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Medium",
          "name": "Medium",
          "color": "fff200",
          "default": false,
          "description": "Difficulty Level - Medium"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-13T15:16:37Z",
      "updated_at": "2020-03-17T01:23:32Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "## Overview\r\nThe code below implements a very simple stack. It can only store integer data type. Can you change it so that it can store any data types?\r\n\r\n```java\r\n// Language: Java\r\npublic class SimpleStack {\r\n    private int[] container;\r\n    private int topIndex;\r\n    \r\n    public SimpleStack(int size) {\r\n        container = new int[size];\r\n    }\r\n\r\n    public void push(int item) {\r\n        topIndex++;\r\n        container[topIndex] = item;\r\n    }\r\n\r\n    public int pop() {\r\n        int item = container[topIndex--];\r\n        return item;\r\n    }\r\n}\r\n```\r\n## Assumptions\r\nThe implementation is intentionally simple. Adding additional validations are not focus of this problem.\r\n\r\n## Task\r\nChange the code such a way that it can support any data type.\r\n\r\n---\r\n<!-- Leave this part as it is -->\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/2/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    },
    {
      "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/1",
      "repository_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog",
      "labels_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/1/labels{/name}",
      "comments_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/1/comments",
      "events_url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/1/events",
      "html_url": "https://github.com/iut-cse/oo-problem-catalog/issues/1",
      "id": 578363459,
      "node_id": "MDU6SXNzdWU1NzgzNjM0NTk=",
      "number": 1,
      "title": "A simple elevator",
      "user": {
        "login": "mohayemin",
        "id": 1958088,
        "node_id": "MDQ6VXNlcjE5NTgwODg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1958088?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohayemin",
        "html_url": "https://github.com/mohayemin",
        "followers_url": "https://api.github.com/users/mohayemin/followers",
        "following_url": "https://api.github.com/users/mohayemin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohayemin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohayemin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohayemin/subscriptions",
        "organizations_url": "https://api.github.com/users/mohayemin/orgs",
        "repos_url": "https://api.github.com/users/mohayemin/repos",
        "events_url": "https://api.github.com/users/mohayemin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohayemin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1899344523,
          "node_id": "MDU6TGFiZWwxODk5MzQ0NTIz",
          "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/labels/Medium",
          "name": "Medium",
          "color": "fff200",
          "default": false,
          "description": "Difficulty Level - Medium"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-03-10T06:24:04Z",
      "updated_at": "2020-03-25T14:43:08Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "## Overview\r\nAn elevator responds to call based on where an elevator is currently located and in which direction it is going. \r\n\r\n## Example\r\nAssume that the elevator is at level 2 and going to level 5.\r\n* If the up button of level 3 is pressed - it will stop at level 3 and then continue to level 5.\r\n* If the down button of level 3 is pressed - it will go to level 5 without stopping, then come back to level 3 and stop.\r\n\r\n## Assumptions\r\n* The elevator is for a 5 level building.\r\n* The elevator has three movement types: up, down, stopped.\r\n* The elevator can be at a specific level at a time, no need to consider that it can be in between two levels.\r\n* The elevator can be called only from outside buttons (up/down).\r\n* A single elevator is being controlled by the buttons.\r\n\r\n## Task\r\n* Write an `Elevator` class.\r\n* Write a `call` method in the elevator class, which takes input a `Button`, using which it has been called.\r\n* The `call` method should return `true` if the elevator will stop directly, `false` if it will first move to its current destination and then accept the call.\r\n* Feel free to write additional classes that might be required.\r\n\r\n## Learning goal\r\n* Encapsulation\r\n\r\n## Notes\r\n* UI Simulation is not the goal of this problem.\r\n\r\n---\r\n### Reminders\r\n* React to the problem if you find it interesting and helpful. This will help others to easily identify good problems to solve.\r\n* Feel free to comment about the problem. Is the description unclear? Do you think it is too easy or too difficult than what is mentioned? Comment about it.\r\n* Discussion about the solution is OK. But do not paste a solution here. Give a link to the solution instead.\r\n* Do you have an interesting problem? [Post it](https://github.com/iut-cse/oo-problem-catalog/issues/new).",
      "reactions": {
        "url": "https://api.github.com/repos/iut-cse/oo-problem-catalog/issues/1/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      }
    }
  ]
  