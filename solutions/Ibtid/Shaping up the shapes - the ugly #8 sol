//=============Shape class================


public abstract class Shape {
    double sizes[];
    Shape(double sizes[]){
        this.sizes=sizes;
    }
    abstract double totalPerimeter();
    abstract double totalArea();
}



//=============Circle inherits Shape============


public class Circle extends Shape {

    public double[] sizes;

    Circle(double[] sizes) {
        super(sizes);
        this.sizes = sizes;
    }

    
    @Override
    double totalPerimeter() {
        double totalPerimeter = 0;
        for (int i = 0; i < sizes.length; i++) {
            totalPerimeter = (2 * 3.1416 * sizes[i]);
        }

        return totalPerimeter;
    }
    
    @Override
    double totalArea() {
        double totalArea = 0;
        for (int i = 0; i < sizes.length; i++) {
            totalArea = (sizes[i] *3.1416 * sizes[i]);
        }

        return totalArea;
    }
}


//================Square inherits Shape================



public class Square extends Shape{
    
    public double[] sizes;

    Square(double[] sizes) {
        super(sizes);
        this.sizes = sizes;
    }

    ;

    
    @Override
    double totalPerimeter() {
        double totalPerimeter = 0;
        for (int i = 0; i < sizes.length; i++) {
            totalPerimeter = (4* sizes[i]);
        }

        return totalPerimeter;
    }
    
    @Override
    double totalArea() {
        double totalArea = 0;
        for (int i = 0; i < sizes.length; i++) {
            totalArea = (sizes[i] * sizes[i]);
        }

        return totalArea;
    }

}


//===================Shape List class===============



class ShapeList {
    public double[] sizes;
    public String types;
    
    Shape shape;
    
    
    
    public void initiateType(String types){
        this.types = types;
        if(types.equals("Circle")) shape = new Circle(sizes);
        if(types.equals("Square")) shape = new Square(sizes);
    }
    
    
    public double totalPerimeter() {
        initiateType(types);
        return shape.totalPerimeter();
    }

    public double totalArea() {
        initiateType(types);
        return shape.totalArea();
    }
}
